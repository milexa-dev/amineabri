version: 2
jobs:
  build:
    working_directory: /var/www/html
    docker:
    - image: circleci/php:7.2-apache-stretch-node-browsers
      environment:
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_HOST: 127.0.0.1
    steps:
      - run:
          name: Install system packages
          command: |
            sudo apt-get update && sudo apt-get -y install git
            sudo chown -R $USER:$USER /var/www/html
            sudo chmod -R 777 /var/www/html
      - checkout
      - run:
          name: Install linux packages
          command: |
            sudo apt-get update
            sudo apt-get install -y libzip-dev
            sudo apt-get install -y zlib1g-dev libicu-dev g++
            sudo apt-get install mysql-client
            sudo apt-get -y install mysql-server
      - run:
          name: Install PHP exts
          command: |
            sudo docker-php-ext-install zip
            sudo docker-php-ext-configure intl
            sudo docker-php-ext-install intl
            sudo docker-php-ext-install pdo_mysql
      - run:
          name: Fix MySQL socket config
          command: |
            sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"
      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            ps aux | grep mysql
      - run:
          name: Create non-admin user and  database
          command: |
            sudo mysql -e "CREATE DATABASE wordpresstest; SHOW DATABASES;"
            sudo mysql -e "CREATE USER 'homestead'@'127.0.0.1' IDENTIFIED BY 'secret';"
            sudo mysql -e "GRANT ALL ON *.* TO 'homestead'@'127.0.0.1';"
      - run:
          name: Install Composer
          command: |
            cd wp-content/themes/twentyseventeen/tests
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
            sudo mv composer.phar /usr/local/bin/composer;
            composer dump-autoload
      - run:
          name: Install PHPUnit
          command: |
            sudo apt-get update && sudo apt-get install wget
            wget https://phar.phpunit.de/phpunit-6.5.6.phar
            sudo chmod +x phpunit-6.5.6.phar
            sudo mv phpunit-6.5.6.phar /usr/local/bin/phpunit
            phpunit --version
      - run:
          name: Install WP-CLI
          command: |
            wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            sudo chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
            wp --info
            java -version
      - run:
          name: Install Selenium
          command: |
            wget https://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar
            sudo chmod +x selenium-server-standalone-3.14.0.jar
            sudo mv selenium-server-standalone-3.14.0.jar /usr/local/bin/selenium
          background: true
      - run:
          name: Run Backend Tests
          command: |
            cd wp-content/themes/twentyseventeen/tests
            phpunit --filter --debug testCreateOrder
#        - run:
#            name: Run Frontend Tests
#            command: |
#              cd wp-content/themes/twentyseventeen/tests
#              java -jar /usr/local/bin/selenium
#              phpunit --filter testHasLoginForm
#          - store_artifacts:
#              path: test-results.xml
#              prefix: tests
      - run:
          name: Install Java
          command: |
            sudo apt-get update && sudo apt-get -y upgrade
            sudo apt-get -y install software-properties-common
            sudo add-apt-repository -y ppa:webupd8team/java
            sudo apt-get update
#  deploy:
#workflows:
#  version: 2
#  build_and_test:
#    jobs:
#      - build
#      - test:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
